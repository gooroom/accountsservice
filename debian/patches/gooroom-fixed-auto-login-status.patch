From 926f0cc5e45559c5410eebeb34f4c489d8785f9d Mon Sep 17 00:00:00 2001
From: donghun <donghun@gooroom.kr>
Date: Wed, 5 Feb 2020 15:54:17 +0900
Subject: [PATCH] Fixed Autologin Status

Change-Id: Icf771c18a34516b5ba8cf5ee6dbf046173a6ccbb
---
 data/accounts-daemon.service.in |  2 +-
 src/daemon.c                    | 53 +++++++++++++++++++++++++++++++++
 2 files changed, 54 insertions(+), 1 deletion(-)

diff --git a/data/accounts-daemon.service.in b/data/accounts-daemon.service.in
index b3ef56e..07ac736 100644
--- a/data/accounts-daemon.service.in
+++ b/data/accounts-daemon.service.in
@@ -4,7 +4,7 @@ Description=Accounts Service
 # In order to avoid races with identity-providing services like SSSD or
 # winbind, we need to ensure that Accounts Service starts after
 # nss-user-lookup.target
-After=nss-user-lookup.target
+After=nss-user-lookup.target display-manager.service
 Wants=nss-user-lookup.target
 
 [Service]
diff --git a/src/daemon.c b/src/daemon.c
index 998817c..ceb0f5f 100644
--- a/src/daemon.c
+++ b/src/daemon.c
@@ -1566,6 +1566,58 @@ load_autologin (Daemon      *daemon,
                 gboolean    *enabled,
                 GError     **error)
 {
+        GVariant *ret;
+        g_autoptr(GError) local_error = NULL;
+        DaemonPrivate *priv = daemon_get_instance_private (daemon);
+
+        ret = g_dbus_connection_call_sync (priv->bus_connection,
+                                           "org.freedesktop.DBus",  /* bus name */
+                                           "/org/freedesktop/DBus", /* object path */
+                                           "org.freedesktop.DBus",  /* interface name */
+                                           "ListNames",    /* method name */
+                                           NULL,
+                                           NULL,
+                                           G_DBUS_CALL_FLAGS_NONE,
+                                           -1,
+                                           NULL,
+                                           &local_error);
+
+        if (local_error != NULL)
+            goto autologin_gdm;
+        
+        if (ret != NULL)
+        {
+            GVariantIter *iter;
+            g_autofree gchar *bus_name;
+            g_autofree gchar *check_bus_name;
+            gboolean is_gdm = FALSE;
+        
+            check_bus_name = g_strdup ("org.gnome.DisplayManager");
+        
+            g_variant_get (ret, "(as)", &iter);
+        
+            while (g_variant_iter_loop (iter, "s", &bus_name))
+            {
+                if (g_strcmp0 (bus_name, check_bus_name) == 0)
+                {
+                    is_gdm = TRUE;
+                    break;
+                }
+            }
+        
+            g_variant_iter_free (iter);
+            g_variant_unref (ret);
+        
+            if (is_gdm)
+                goto autologin_gdm;
+        }
+        
+        return load_autologin_lightdm (daemon, name, enabled, error);
+
+autologin_gdm:
+        return load_autologin_gdm (daemon, name, enabled, error);
+
+#if 0
         g_autoptr(GDBusProxy) proxy = NULL;
 
         /* First, determine whether we should load GDM or LightDM values by
@@ -1585,6 +1637,7 @@ load_autologin (Daemon      *daemon,
                 return load_autologin_gdm (daemon, name, enabled, error);
         else
                 return load_autologin_lightdm (daemon, name, enabled, error);
+#endif
 }
 
 static gboolean
-- 
2.20.1

